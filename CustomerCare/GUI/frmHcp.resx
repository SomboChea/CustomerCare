<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.CurrentImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAB/9JREFUeF7tnS1sHEcUxw/Ec24VEFBQEFAQUFBQUFAQqQGpVBAQkEpNvRcbFhoY
        FARYqtSAAoOAAoOCVDIoMAgICAgIMDAIMCgIsOwZy6oCXMnAwMB9b3auvvW9Xd/Hzu7M7P8v/eQot7e3
        O+/tzJuvt70U9U3v4sayOvo8U4cPB0r/PFBmc9A/2qK/byx9s5cpsz8K/9/l53zs0R/0/adPlH6ULRx+
        sdzbX3Snh0ISG3vpI/21NXTfbFtD9vU5/b2om6yv/yZe0vnXl/r6HpyiJf24YL4kg6+SUcjg+vSqoZoi
        65szqjFesfOxE7IzukuE6hZX6VQ1/0IFriVjBIHSH8gpNgY3Dr5ylw3No8c3jz7hJ50KdVcs8ICxzQXF
        EFQz3Ha3A02qrH94h4MwX215C2xzs+VuDyqTbdvzQE4qxPihHgYHj+52oaGSN/xV4Ai5qBt1K1P6d7GQ
        OgDFNn91Nkagm1/hqFkqmG6hTylYXOtMF5JH1TJl3sqF0Wn2BosHd10xpal88CaZyN4LVDM+S6424Lae
        bq47Qd6ccA2ZTGzAo2JuskW8WVCCHVU8/M4VY5zi4AZV/nxE2yTQhW9INwSmh7uL0TgBXyhfsHQjYA6U
        efN975+brpjDFF+gnR6VbgDMjzI7yx/vf+qKOyzlo3ro3/uGZxmDcwJ+8mH85gjKCbjNR7XfPBRn7QYR
        EyDgaw+udVvtHaCr1z6tdRHzQR75okCz8IPozNKMeHgXI3xhQQ/kQ2cev3LdPYztBwbVAifL/ePPnJn8
        iX4Ms3qBQk6w6zUeyOfz5R8HYeAtHuCVPGj348DLNDJG+iJCmfe17lukamVF/KHA+fXbDxfzis8hnTt8
        9Loz33yyy7kiXb3bZQegh/aMd1g5M86umNftd7sGIJR55cw4m9yOHfnkEdB5ByDmGiCiE0Td54cDMPqd
        M+d0iv3pZ+AAOTPVAvTF6Ef84ABDpqwF7P588URxAQcocN+Z93rlyRnEk0QFHGAEZd4481bLpmVJZMgX
        DlBkoiwlKU34wAGKTDRRxFOK0pdjBA5QJFPmuHK6OE/FJn85RuAA41TOFNo8fMKXYgUOIKDMC2fucdGH
        4SZhnAE4wDg8SSTuJ0hh5O8qcAAZcWQwxeVecAAZsTdAHyS32BMOUMaVoWG7v6/FrNu+gAOUU9hcavPt
        CwfFDhygnGzh8Adnftv+88sWxANjBg5QDq/0cuZPs/1n4ABVjMQB9B974wfEDxygCn1qje8CwCQ3fMAB
        qrF7CVMb/x8FDlCNnRfgUSHpQ99wwfrmz7V/nRlnF59DOnfdSGXkHaVXW+sBQEVJZeQb2xMY2Jcqygf4
        BCpKKiPfkAO85ingLelD30BFSWXkG97wyzUAv0pVPMAnUFFSGfmGM73AAQKRVEa+yR2gpUEgqCipjHyT
        9c0JJ35oJeETVJRURk0ABwhEUhk1AccArawDhIqSyqgJUAMEIqmMmqDHqcelD3wDFSWVkX/0KbqBgUgq
        I99gHCAgSWXkG+sA1BdsJd8/VJRURt5RZodqgHZyAUBFSWXkHc4ZkKnDp+KHnoGKksrIO8ps9p4o/Uj8
        0DPSooi6wYKQaujhX3NJoOUDYocLdl61ZZxGUOYBp4JdFD9MADhANbwe1K4MbmswyDdwgHJ4m7g1Posc
        4KV0UOzAASrZc+bnjSF6XTggeuAAFVD335m/11vq63viQZEDByiHmoAVZ377ToBFbhOkA2MGDlDO2BvG
        qEuQ3Pt/4QAyHPQ7s18qxS3icACZwtbwoVJMEgEHkCkkhxjK7hKO9N1AZcABJPQ554N2Zi+KAsGk3gYO
        BxDZduYeV/5SaPFLUQIHGIcn/5y5ZaU0LAwHKEI1/Mm1L5Rsa32AD+AAV+D5/+tEvYHb4pcjBA5whcWD
        u87M1aKDk8gaBgcYZYoXR6WSOBoOcImYILpKvGBQOlFMwAEcyryvfFOIpBRmCOEAOYWZv2kUey0AByBm
        efqHir0WgAPM8fQPRSdoZedQHXTeAZTZmfnpHyofF4jzXQLddgB9zkP7zozziTcQyD8SNp12AGWeO/PN
        rzyhdJoZxVMkU+Z4ubd/y5mvHvEwovRjIDyWFnXmzFavKCB8Jv0gCImjLWeu+sVNAVUvb+UfBq1DfX7x
        pZB1yvYKEls6lgJUO59N9Hr4OsQvGpAuArTKT848zYjamt+EiwCt4LHdL5ONByIeJUwFjsm8t/tlQlDY
        Lrx+szXjD8UXQDXBrnSBwCMU8Rde/9qm+EJSTTIRInakb5jdIxRx9xBO4J8gjT8U1wS8+FC6cFADXO2H
        avyhbEyAwLB2uHYNps2/Ti7hBLqINdFqV29W2SlkZZ5LNwSm4WgrOuOPitejU21wIt8cKIPH9ulvs8O7
        vsT5aDBWMAUU7DU2sdOU3NBxUvkH/BB5lX+d7Ewiebh8892F+/feVvKEpjw/sV537ZxYIN1Bn3OwXPsa
        vhhEtcEduvnk0tNNjDI7tS3djlncU+jUCCI1gVT7rXBc5IoAYiXvCDD8ZKLCuk+FFf329Ev0O3ZuGH5K
        cV+Yu44cIcsFGy503SfkxJsTp2WBypWPIdju44uwew4U0ffNNqdiuzYbFzSb8tlGO7y8EUK8wLN0nHuX
        06+WZuCE/MmuRqLCZyPkDuFvJ7Orffb4ZQv075WxlOtQGMrnHrjJ0Kv26VT6NTUfOxRL7DOyk+jT/z/n
        /jkHodSGU22zRn8fBL8QYyb1ev8BkcGbmRmlw4wAAAAASUVORK5CYII=
</value>
  </data>
</root>